source("forecast-viz.R")
source("forecast_tools.R")
source(
"https://raw.githubusercontent.com/weecology/PortalDataSummaries/master/RodentAbundances.R"
)
plot_sp_predicts = function(data, lvl, kind) {
data = transform(data, forecast_date = as.yearmon(paste(forecastmonth, "/", forecastyear, sep =
""), format = "%m/%Y")) %>% transform(Date = as.Date(Date, "%Y-%m-%d"))
data1 = filter(data, level == lvl,
Date == max(as.Date(Date)))
target_moon = min(data1$NewMoonNumber)
data2 = filter(data1, NewMoonNumber == target_moon)
title1 = paste(data2$forecast_date[2], lvl, sep = " ")
plot_data(data2, title1, kind)
}
plot_data = function(data, title, kind) {
if (kind == 'forecast') {
ggplot(data,
aes(
x = estimate,
y = reorder(species, estimate),
xmin = LowerPI,
xmax = UpperPI
)) +
geom_point() +
geom_errorbarh() +
ggtitle(title) + # should make title better somehow
ylab("Species") +
xlab("Abundance")
}
else{
print("not available")
}
}
compile = compile_forecasts()
data = make_ensemble(compile)
plot_sp_predicts(data, "All", "forecast")
source("forecast_tools.R")
source("forecast_tools.R")
compile = compile_forecasts()
data = make_ensemble(compile)
plot_sp_predicts(data, "All", "forecast")
test = function(data, lvl, kind) {
data = transform(data, forecast_date = as.yearmon(paste(forecastmonth, "/", forecastyear, sep =
""), format = "%m/%Y")) %>% transform(Date = as.Date(Date, "%Y-%m-%d"))
data1 = filter(data, level == lvl,
Date == max(as.Date(Date)))
target_moon = min(data1$NewMoonNumber)
data2 = filter(data1, NewMoonNumber == target_moon)
title1 = paste(data2$forecast_date[2], lvl, sep = " ")
plot_data(data2, title1, kind)
}
plot_data = function(data, title, kind) {
if (kind == 'forecast') {
ggplot(data,
aes(
x = estimate,
y = reorder(species, estimate),
xmin = LowerPI,
xmax = UpperPI
)) +
geom_point() +
geom_errorbarh() +
ggtitle(title) + # should make title better somehow
ylab("Species") +
xlab("Abundance")
}
else{
print("not available")
}
}
test(data, "All", "forecast")
test(data, "All", "observed")
f
source("forecast-viz.R")
source("forecast_tools.R")
source("https://raw.githubusercontent.com/weecology/PortalDataSummaries/master/RodentAbundances.R")
data = compile_forecasts()
ensemble = make_ensemble(data)
plot_sp_predicts(ensemble, 'All', 'forecast')
