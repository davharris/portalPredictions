select(-NewMoonDate,-CensusDate,-Period)
View(controls)
moons <- read.csv("~/PortalData/Rodents/moon_dates.csv",header=T)
source("~/PortalData/DataSummaryScripts/RodentAbundances.R"); controls=abundance(level="Treatment",type="Rodents",length="Longterm")
controls$total = rowSums(controls[,-(1:2)])
controls=subset(controls,treatment=="control",select=-treatment)
controls=inner_join(moons,controls,by=c("Period"="period")) %>% subset(Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period)
all=abundance(level="Site",type="Rodents",length="all")
all$total = rowSums(all[,-(1)])
all=inner_join(moons,all,by=c("Period"="period")) %>% subset(Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period)
source("~/PortalData/DataSummaryScripts/Weather.R"); weather=weather("Monthly")
moons$Year=year(moons$NewMoonDate); moons$Month=month(moons$NewMoonDate)
NDVI=read.csv("~/Dropbox/Portal/PORTAL_primary_data/NDVI/CompositeNDVI/monthly_NDVI.csv")
NDVI$Month=as.numeric(gsub( ".*-", "", NDVI$Date )); NDVI$Year=as.numeric(gsub( "-.*$", "", NDVI$Date ))
weather=full_join(weather,NDVI) %>% select(-Date, -X) %>% arrange(Year,Month)
weather=right_join(weather,moons)
View(weather)
weather = select(NewMoonNumber=all$NewMoonNumber-6)
select(weather,NewMoonNumber=all$NewMoonNumber-6)
all$NewMoonNumber-6
all$NewMoonNumber
weather = select(weather,NewMoonNumber %in% all$NewMoonNumber-6)
View(weather)
weather = select(weather,NewMoonNumber %in% (all$NewMoonNumber-6))
weather = weather[,NewMoonNumber =all$NewMoonNumber-6]
min(all$NewMoonNumber)
weather = select(weather,NewMoonNumber>=min(all$NewMoonNumber)-6)
weather = select(weather,NewMoonNumber>=(min(all$NewMoonNumber)-6))
(min(all$NewMoonNumber)-6
)
(min(all$NewMoonNumber)-6
)
min(all$NewMoonNumber)-7
weather = select(weather,NewMoonNumber>(min(all$NewMoonNumber)-7))
source("~/PortalData/DataSummaryScripts/Weather.R"); weather=weather("Monthly")
moons$Year=year(moons$NewMoonDate); moons$Month=month(moons$NewMoonDate)
NDVI=read.csv("~/Dropbox/Portal/PORTAL_primary_data/NDVI/CompositeNDVI/monthly_NDVI.csv")
NDVI$Month=as.numeric(gsub( ".*-", "", NDVI$Date )); NDVI$Year=as.numeric(gsub( "-.*$", "", NDVI$Date ))
we
weather=full_join(weather,NDVI) %>% select(-Date, -X) %>% arrange(Year,Month)
weather=right_join(weather,moons) %>% select(NewMoonNumber>min(all$NewMoonNumber)-7)
weather=right_join(weather,moons) %>% select(NewMoonNumber>210)
weather=right_join(weather,moons) %>% subset(NewMoonNumber>210)
View(weather)
dim(all)
dim(controls)
dim(weather)
View(weather)
View(weather)
weather=weather("Monthly")
moons$Year=year(moons$NewMoonDate); moons$Month=month(moons$NewMoonDate)
NDVI=read.csv("~/Dropbox/Portal/PORTAL_primary_data/NDVI/CompositeNDVI/monthly_NDVI.csv")
NDVI$Month=as.numeric(gsub( ".*-", "", NDVI$Date )); NDVI$Year=as.numeric(gsub( "-.*$", "", NDVI$Date ))
weather=full_join(weather,NDVI) %>% select(-Date, -X) %>% arrange(Year,Month)
weather=right_join(weather,moons) %>% subset(NewMoonNumber>210) %>% select(-NewMoonDate,-CensusDate,-Period)
View(weather)
weatherforecast=weather[dim(all)[1]+1:dim(weather)[1],]
View(weatherforecast)
dim(all)[1]
View(weather)
View(all)
488-217
dim(controls)
View(weather)
View(all)
current=488
NewMoonNumber= current + 1:12
forecastmonth=month(Sys.Date() %m+% months(0:11))
forecastyear=year(Sys.Date() %m+% months(0:11))
View(all)
weatherforecast=subset(weather,current+12>NewMoonNumber>current)
weatherforecast=subset(weather,NewMoonNumber>current) %>% subset(weather,NewMoonNumber<current+12)
weatherforecast=subset(weather,NewMoonNumber>current) %>% subset(weather,NewMoonNumber<(current+12))
current=489; last=current + 11
NewMoonNumber= current:last
NewMoonNumber
weatherforecast=subset(weather,NewMoonNumber>=current) %>% subset(weather,NewMoonNumber<=last)
subset(weather,NewMoonNumber>=current)
subset(weather,NewMoonNumber<=last)
weatherforecast=subset(weather,NewMoonNumber>=current) %>% subset(NewMoonNumber<=last)
View(weatherforecast)
weatherforecast=subset(weather,NewMoonNumber>=current-6) %>% subset(NewMoonNumber<=last-6)
View(weatherforecast)
View(weatherforecast)
weatherforecast=subset(weather,NewMoonNumber>=current-5) %>% subset(NewMoonNumber<=last-5)
View(weatherforecast)
View(weatherforecast)
View(weatherforecast)
weathermeans=weather[dim(weather)[1]-36:dim(weather)[1],] %>% group_by(Month) %>%
summarize(MinTemp=mean(MinTemp,na.rm=T),MaxTemp=mean(MaxTemp,na.rm=T),MeanTemp=mean(MeanTemp,na.rm=T),Precipitation=mean(Precipitation,na.rm=T),NDVI=mean(NDVI,na.rm=T)) %>%
slice(match(weatherforecast$Month, Month))
View(weathermeans)
weather=subset(weather,NewMoonNumber<current-5)
View(weather)
View(all)
View(all)
weather=weather("Monthly")
source("~/PortalData/DataSummaryScripts/Weather.R"); weather=weather("Monthly")
weather=full_join(weather,NDVI) %>% select(-Date, -X) %>% arrange(Year,Month)
weather=right_join(weather,moons) %>% subset(NewMoonNumber>210) %>% select(-NewMoonDate,-CensusDate,-Period) %.%
mutate(NDVI = ifelse(is.na(NDVI), mean(NDVI, na.rm = T), NDVI))
weather=right_join(weather,moons) %>% subset(NewMoonNumber>210) %>% select(-NewMoonDate,-CensusDate,-Period) %>%
mutate(NDVI = ifelse(is.na(NDVI), mean(NDVI, na.rm = T), NDVI))
View(weather)
source("~/PortalData/DataSummaryScripts/Weather.R"); weather=weather("Monthly")
moons$Year=year(moons$NewMoonDate); moons$Month=month(moons$NewMoonDate)
NDVI=read.csv("~/Dropbox/Portal/PORTAL_primary_data/NDVI/CompositeNDVI/monthly_NDVI.csv")
NDVI$Month=as.numeric(gsub( ".*-", "", NDVI$Date )); NDVI$Year=as.numeric(gsub( "-.*$", "", NDVI$Date ))
weather=full_join(weather,NDVI) %>% select(-Date, -X) %>% arrange(Year,Month)
weather=right_join(weather,moons) %>% subset(NewMoonNumber>210) %>% select(-NewMoonDate,-CensusDate,-Period)
weatherforecast=subset(weather,NewMoonNumber>=current-5) %>% subset(NewMoonNumber<=last-5)
weathermeans=weather[dim(weather)[1]-36:dim(weather)[1],] %>% group_by(Month) %>%
summarize(MinTemp=mean(MinTemp,na.rm=T),MaxTemp=mean(MaxTemp,na.rm=T),MeanTemp=mean(MeanTemp,na.rm=T),
Precipitation=mean(Precipitation,na.rm=T),NDVI=mean(NDVI,na.rm=T)) %>%
slice(match(weatherforecast$Month, Month))
View(all)
View(weather)
weather=subset(weather,NewMoonNumber<current-6)
View(weather)
weather$NewMoonNumber=all$NewMoonNumber
weather$NewMoonNumber==all$NewMoonNumber
weather$NewMoonNumber==all$NewMoonNumber-6
View(weather)
all=abundance(level="Site",type="Rodents",length="all")
all$total = rowSums(all[,-(1)])
all=inner_join(moons,all,by=c("Period"="period"))
View(all)
View(controls)
moons <- read.csv("~/PortalData/Rodents/moon_dates.csv",header=T)
moons$Year=year(moons$NewMoonDate); moons$Month=month(moons$NewMoonDate)
source("~/PortalData/DataSummaryScripts/RodentAbundances.R"); controls=abundance(level="Treatment",type="Rodents",length="Longterm")
controls$total = rowSums(controls[,-(1:2)])
controls=subset(controls,treatment=="control",select=-treatment)
controls=inner_join(moons,controls,by=c("Period"="period")) %>% subset(Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period)
View(controls)
source("~/PortalData/DataSummaryScripts/RodentAbundances.R"); controls=abundance(level="Treatment",type="Rodents",length="Longterm")
controls$total = rowSums(controls[,-(1:2)])
controls=subset(controls,treatment=="control",select=-treatment)
controls=inner_join(moons,controls,by=c("Period"="period")) %>% subset(Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period,-Year,-Month)
View(controls)
all=abundance(level="Site",type="Rodents",length="all")
all$total = rowSums(all[,-(1)])
all=inner_join(moons,all,by=c("Period"="period"))
View(all)
source("~/PortalData/DataSummaryScripts/Weather.R"); weather=weather("Monthly")
NDVI=read.csv("~/Dropbox/Portal/PORTAL_primary_data/NDVI/CompositeNDVI/monthly_NDVI.csv")
NDVI$Month=as.numeric(gsub( ".*-", "", NDVI$Date )); NDVI$Year=as.numeric(gsub( "-.*$", "", NDVI$Date ))
weather=full_join(weather,NDVI) %>% select(-Date, -X) %>% arrange(Year,Month)
weather=right_join(weather,all) %>% subset(NewMoonNumber>210) %>% select(-NewMoonDate,-CensusDate,-Period) #%>%
View(all)
View(weather)
View(weather)
weather=right_join(weather,all) %>% subset(NewMoonNumber>210) %>% select(Year,Month,MinTemp,MaxTemp,MeanTemp,Precipitation,NDVI,NewMoonNumber) #%>%
View(weather)
weatherforecast=subset(weather,NewMoonNumber>=current-5) %>% subset(NewMoonNumber<=last-5)
weathermeans=weather[dim(weather)[1]-36:dim(weather)[1],] %>% group_by(Month) %>%
summarize(MinTemp=mean(MinTemp,na.rm=T),MaxTemp=mean(MaxTemp,na.rm=T),MeanTemp=mean(MeanTemp,na.rm=T),
Precipitation=mean(Precipitation,na.rm=T),NDVI=mean(NDVI,na.rm=T)) %>%
slice(match(weatherforecast$Month, Month))
weather=subset(weather,NewMoonNumber<current-6)
all=subset(all,Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period)
View(weather)
forecastall <- function(abundances,level,weather,weatherforecast) {
##Community level predictions
#naive models
model01=forecast(abundances$total,h=12,level=0.9,BoxCox.lambda(0),allow.multiplicative.trend=T)
forecasts01=data.frame(date=Sys.Date(), forecastmonth=forecastmonth,forecastyear=forecastyear, NewMoonNumber=NewMoonNumber,
currency="abundance",model="Forecast", level=level, species="total", estimate=model01$mean,
LowerPI=model01$lower[,which(model01$level==90)], UpperPI=model01$upper[,which(model01$level==90)])
forecasts01[sapply(forecasts01, is.ts)] <- lapply(forecasts01[sapply(forecasts01, is.ts)],unclass)
model02=forecast(auto.arima(abundances$total,lambda = 0),h=12,level=0.9,fan=T)
forecasts02=data.frame(date=Sys.Date(), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance", model="AutoArima", level=level, species="total", estimate=model02$mean,
LowerPI=model02$lower[,which(model02$level==90)], UpperPI=model02$upper[,which(model02$level==90)])
forecasts02[sapply(forecasts02, is.ts)] <- lapply(forecasts02[sapply(forecasts02, is.ts)],unclass)
#Start builing results table
forecasts=rbind(forecasts01,forecasts02)
##Time Series Model and Species level predictions
species=colnames(abundances)
for(s in 2:23) {
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
pred=predict(model,12,level=0.9)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("NegBinom Time Series",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
#Time Series model with environmental covariates, max, min and mean temp, precip and NDVI with 6 month lag
##Create environmental covariate models
X=list(c(3:7),c(4:7),c(3,4,6,7),c(3:6),c(6,7),c(3,7),3,4,5,6,7)
for(s in 2:23) {
##Find best covariate model
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[1:dim(abundances)[1],unlist(X[1])],link = "log")
modelaic=ifelse(has_error(summary(model))==T,Inf,summary(model)$AIC)
for(i in 2:11) {
newmodel=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[1:dim(abundances)[1],unlist(X[i])],link = "log")
newmodelaic=ifelse(has_error(summary(newmodel))==T,Inf,summary(newmodel)$AIC)
if(newmodelaic < modelaic) {model=newmodel}}
pred=predict(model,12,level=0.9,newdata=weatherforecast)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency,model=rep("Poisson Env",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
write.csv(forecasts,paste(as.character(Sys.Date()),level,"forecasts.csv",sep=""),row.names=FALSE) }
forecastall(all,"All",weather,weatherforecast)
warnings()
all=subset(all,Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period) %>%
mutate(NDVI = ifelse(is.na(NDVI), mean(NDVI, na.rm = T), NDVI))
all=abundance(level="Site",type="Rodents",length="all")
all$total = rowSums(all[,-(1)])
all=inner_join(moons,all,by=c("Period"="period"))
all=subset(all,Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period) %>%
mutate(NDVI = ifelse(is.na(NDVI), mean(NDVI, na.rm = T), NDVI))
all=abundance(level="Site",type="Rodents",length="all")
all$total = rowSums(all[,-(1)])
all=inner_join(moons,all,by=c("Period"="period"))
all=subset(all,Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period) %>%
mutate(NDVI = ifelse(is.na(NDVI), mean(NDVI, na.rm = T), NDVI))
all=subset(all,Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period)
weather=subset(weather,NewMoonNumber<current-6) %>%
mutate(NDVI = ifelse(is.na(NDVI), mean(NDVI, na.rm = T), NDVI))
View(weather)
forecastall(all,"All",weather,weathermeans)
abundances-all
abundances=all
s=1
s=2
X=list(c(3:7),c(4:7),c(3,4,6,7),c(3:6),c(6,7),c(3,7),3,4,5,6,7)
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[1:dim(abundances)[1],unlist(X[1])],link = "log")
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
View(all)
all=subset(all,Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period,-Year,-Month)
all=abundance(level="Site",type="Rodents",length="all")
all$total = rowSums(all[,-(1)])
all=inner_join(moons,all,by=c("Period"="period"))
all=subset(all,Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period,-Year,-Month)
abundances=all
View(all)
View(weather)
View(weather)
weather=subset(weather,NewMoonNumber<current-6) %>%
mutate(NDVI = ifelse(is.na(NDVI), mean(NDVI, na.rm = T), NDVI)) %>%
mutate(MinTemp = ifelse(is.na(MinTemp), mean(MinTemp, na.rm = T), MinTemp)) %>%
mutate(MaxTemp = ifelse(is.na(MaxTemp), mean(MaxTemp, na.rm = T), MaxTemp)) %>%
mutate(MeanTemp = ifelse(is.na(MeanTemp), mean(MeanTemp, na.rm = T), MeanTemp)) %>%
mutate(Precipitation = ifelse(is.na(Precipitation), mean(Precipitation, na.rm = T), Precipitation))
View(weather)
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
View(weather)
weather[249:254,7]=0.197
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
forecastall(all,"All",weather,weathermeans)
forecastall(controls,"Controls",weather,weathermeans)
forecastall(all,"All",weather,weathermeans)
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
pred=predict(model,12,level=0.9,newdata=weatherforecast)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("Poisson Env",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
library(tscount)
library(forecast)
library(lubridate)
library(dplyr)
library(testit)
current=489; last=current + 11
NewMoonNumber= current:last
forecastmonth=month(Sys.Date() %m+% months(0:11))
forecastyear=year(Sys.Date() %m+% months(0:11))
#get Portal Data
moons <- read.csv("~/PortalData/Rodents/moon_dates.csv",header=T)
moons$Year=year(moons$NewMoonDate); moons$Month=month(moons$NewMoonDate)
source("~/PortalData/DataSummaryScripts/RodentAbundances.R"); controls=abundance(level="Treatment",type="Rodents",length="Longterm")
controls$total = rowSums(controls[,-(1:2)])
controls=subset(controls,treatment=="control",select=-treatment)
controls=inner_join(moons,controls,by=c("Period"="period")) %>% subset(Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period,-Year,-Month)
all=abundance(level="Site",type="Rodents",length="all")
all$total = rowSums(all[,-(1)])
all=inner_join(moons,all,by=c("Period"="period"))
#get weather data
source("~/PortalData/DataSummaryScripts/Weather.R"); weather=weather("Monthly")
NDVI=read.csv("~/Dropbox/Portal/PORTAL_primary_data/NDVI/CompositeNDVI/monthly_NDVI.csv")
NDVI$Month=as.numeric(gsub( ".*-", "", NDVI$Date )); NDVI$Year=as.numeric(gsub( "-.*$", "", NDVI$Date ))
weather=full_join(weather,NDVI) %>% select(-Date, -X) %>% arrange(Year,Month)
weather=right_join(weather,all) %>% subset(NewMoonNumber>210) %>% select(Year,Month,MinTemp,MaxTemp,MeanTemp,Precipitation,NDVI,NewMoonNumber)
##Get 6 month weather forecast by combining stations data and monthly means of past 3 years
weatherforecast=subset(weather,NewMoonNumber>=current-5) %>% subset(NewMoonNumber<=last-5)
weathermeans=weather[dim(weather)[1]-36:dim(weather)[1],] %>% group_by(Month) %>%
summarize(MinTemp=mean(MinTemp,na.rm=T),MaxTemp=mean(MaxTemp,na.rm=T),MeanTemp=mean(MeanTemp,na.rm=T),
Precipitation=mean(Precipitation,na.rm=T),NDVI=mean(NDVI,na.rm=T)) %>%
slice(match(weatherforecast$Month, Month))
weather=subset(weather,NewMoonNumber<current-6) %>%
mutate(NDVI = ifelse(is.na(NDVI), mean(NDVI, na.rm = T), NDVI)) %>%
mutate(MinTemp = ifelse(is.na(MinTemp), mean(MinTemp, na.rm = T), MinTemp)) %>%
mutate(MaxTemp = ifelse(is.na(MaxTemp), mean(MaxTemp, na.rm = T), MaxTemp)) %>%
mutate(MeanTemp = ifelse(is.na(MeanTemp), mean(MeanTemp, na.rm = T), MeanTemp)) %>%
mutate(Precipitation = ifelse(is.na(Precipitation), mean(Precipitation, na.rm = T), Precipitation))
all=subset(all,Period>202) %>%
select(-NewMoonDate,-CensusDate,-Period,-Year,-Month)
View(weather)
weather[249:254,7]=0.197
abundances=all
newweather=weathermeans
X=list(c(3:7),c(4:7),c(3,4,6,7),c(3:6),c(6,7),c(3,7),3,4,5,6,7)
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
s=2
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
pred=predict(model,12,level=0.9,newdata=newweather)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("Poisson Env",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
level="all"
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("Poisson Env",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
species=colnames(abundances)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("Poisson Env",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
forecastall <- function(abundances,level,weather,weatherforecast) {
##Community level predictions
#naive models
model01=forecast(abundances$total,h=12,level=0.9,BoxCox.lambda(0),allow.multiplicative.trend=T)
forecasts01=data.frame(date=Sys.Date(), forecastmonth=forecastmonth,forecastyear=forecastyear, NewMoonNumber=NewMoonNumber,
currency="abundance",model="Forecast", level=level, species="total", estimate=model01$mean,
LowerPI=model01$lower[,which(model01$level==90)], UpperPI=model01$upper[,which(model01$level==90)])
forecasts01[sapply(forecasts01, is.ts)] <- lapply(forecasts01[sapply(forecasts01, is.ts)],unclass)
model02=forecast(auto.arima(abundances$total,lambda = 0),h=12,level=0.9,fan=T)
forecasts02=data.frame(date=Sys.Date(), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance", model="AutoArima", level=level, species="total", estimate=model02$mean,
LowerPI=model02$lower[,which(model02$level==90)], UpperPI=model02$upper[,which(model02$level==90)])
forecasts02[sapply(forecasts02, is.ts)] <- lapply(forecasts02[sapply(forecasts02, is.ts)],unclass)
#Start builing results table
forecasts=rbind(forecasts01,forecasts02)
##Time Series Model and Species level predictions
species=colnames(abundances)
for(s in 2:23) {
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
pred=predict(model,12,level=0.9)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("NegBinom Time Series",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
#Time Series model with environmental covariates, max, min and mean temp, precip and NDVI with 6 month lag
##Create environmental covariate models
X=list(c(3:7),c(4:7),c(3,4,6,7),c(3:6),c(6,7),c(3,7),3,4,5,6,7)
for(s in 2:23) {
##Find best covariate model
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
modelaic=ifelse(has_error(summary(model))==T,Inf,summary(model)$AIC)
for(i in 2:11) {
newmodel=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[i])],link = "log")
newmodelaic=ifelse(has_error(summary(newmodel))==T,Inf,summary(newmodel)$AIC)
if(newmodelaic < modelaic) {model=newmodel}}
pred=predict(model,12,level=0.9,newdata=newweather)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("Poisson Env",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
write.csv(forecasts,paste(as.character(Sys.Date()),level,"forecasts.csv",sep=""),row.names=FALSE) }
forecastall <- function(abundances,level,weather,weatherforecast) {
##Community level predictions
#naive models
model01=forecast(abundances$total,h=12,level=0.9,BoxCox.lambda(0),allow.multiplicative.trend=T)
forecasts01=data.frame(date=Sys.Date(), forecastmonth=forecastmonth,forecastyear=forecastyear, NewMoonNumber=NewMoonNumber,
currency="abundance",model="Forecast", level=level, species="total", estimate=model01$mean,
LowerPI=model01$lower[,which(model01$level==90)], UpperPI=model01$upper[,which(model01$level==90)])
forecasts01[sapply(forecasts01, is.ts)] <- lapply(forecasts01[sapply(forecasts01, is.ts)],unclass)
model02=forecast(auto.arima(abundances$total,lambda = 0),h=12,level=0.9,fan=T)
forecasts02=data.frame(date=Sys.Date(), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance", model="AutoArima", level=level, species="total", estimate=model02$mean,
LowerPI=model02$lower[,which(model02$level==90)], UpperPI=model02$upper[,which(model02$level==90)])
forecasts02[sapply(forecasts02, is.ts)] <- lapply(forecasts02[sapply(forecasts02, is.ts)],unclass)
#Start builing results table
forecasts=rbind(forecasts01,forecasts02)
##Time Series Model and Species level predictions
species=colnames(abundances)
for(s in 2:23) {
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
pred=predict(model,12,level=0.9)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("NegBinom Time Series",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
#Time Series model with environmental covariates, max, min and mean temp, precip and NDVI with 6 month lag
##Create environmental covariate models
X=list(c(3:7),c(4:7),c(3,4,6,7),c(3:6),c(6,7),c(3,7),3,4,5,6,7)
for(s in 2:23) {
##Find best covariate model
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
modelaic=ifelse(has_error(summary(model))==T,Inf,summary(model)$AIC)
for(i in 2:11) {
newmodel=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[i])],link = "log")
newmodelaic=ifelse(has_error(summary(newmodel))==T,Inf,summary(newmodel)$AIC)
if(newmodelaic < modelaic) {model=newmodel}}
pred=predict(model,12,level=0.9,newdata=newweather)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("Poisson Env",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
return(forecasts)
write.csv(forecasts,paste(as.character(Sys.Date()),level,"forecasts.csv",sep=""),row.names=FALSE) }
forecastall(all,"All",weather,weathermeans)
forecasts
getwd()
allforecasts=forecastall(all,"All",weather,weathermeans)
View(allforecasts)
write.csv(allforecasts,paste(as.character(Sys.Date()),level,"forecasts.csv",sep=""),row.names=FALSE)
setwd("~/portalPredictions")
write.csv(allforecasts,paste(as.character(Sys.Date()),level,"forecasts.csv",sep=""),row.names=FALSE)
controlsforecasts=forecastall(controls,"Controls",weather,weathermeans)
abundances=controls
level="Controls"
View(abundances)
s
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
model01=forecast(abundances$total,h=12,level=0.9,BoxCox.lambda(0),allow.multiplicative.trend=T)
forecasts01=data.frame(date=Sys.Date(), forecastmonth=forecastmonth,forecastyear=forecastyear, NewMoonNumber=NewMoonNumber,
currency="abundance",model="Forecast", level=level, species="total", estimate=model01$mean,
LowerPI=model01$lower[,which(model01$level==90)], UpperPI=model01$upper[,which(model01$level==90)])
forecasts01[sapply(forecasts01, is.ts)] <- lapply(forecasts01[sapply(forecasts01, is.ts)],unclass)
model02=forecast(auto.arima(abundances$total,lambda = 0),h=12,level=0.9,fan=T)
forecasts02=data.frame(date=Sys.Date(), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance", model="AutoArima", level=level, species="total", estimate=model02$mean,
LowerPI=model02$lower[,which(model02$level==90)], UpperPI=model02$upper[,which(model02$level==90)])
forecasts02[sapply(forecasts02, is.ts)] <- lapply(forecasts02[sapply(forecasts02, is.ts)],unclass)
#Start builing results table
forecasts=rbind(forecasts01,forecasts02)
species=colnames(abundances)
for(s in 2:23) {
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
pred=predict(model,12,level=0.9)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("NegBinom Time Series",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
View(forecasts)
View(forecasts)
species
s=13
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
pred=predict(model,12,level=0.9)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("NegBinom Time Series",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
View(forecasts)
for(s in 14:23) {
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
pred=predict(model,12,level=0.9)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("NegBinom Time Series",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
View(forecasts)
species
for(s in 18:23) {
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
pred=predict(model,12,level=0.9)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("NegBinom Time Series",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
View(forecasts)
species
s=23
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="nbinom")
pred=predict(model,12,level=0.9)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("NegBinom Time Series",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
X=list(c(3:7),c(4:7),c(3,4,6,7),c(3:6),c(6,7),c(3,7),3,4,5,6,7)
for(s in 2:23) {
##Find best covariate model
model=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[1])],link = "log")
modelaic=ifelse(has_error(summary(model))==T,Inf,summary(model)$AIC)
for(i in 2:11) {
newmodel=tsglm(abundances[[s]],model=list(past_obs=1,past_mean=12),distr="poisson",xreg=weather[,unlist(X[i])],link = "log")
newmodelaic=ifelse(has_error(summary(newmodel))==T,Inf,summary(newmodel)$AIC)
if(newmodelaic < modelaic) {model=newmodel}}
pred=predict(model,12,level=0.9,newdata=newweather)
newpred=data.frame(date=rep(Sys.Date(),12), forecastmonth=forecastmonth,forecastyear=forecastyear,NewMoonNumber=NewMoonNumber,
currency="abundance",model=rep("Poisson Env",12),level=level,
species=rep(species[s],12), estimate=pred$pred, LowerPI=pred$interval[,1],UpperPI=pred$interval[,2])
forecasts=rbind(forecasts,newpred)
}
View(forecasts)
View(weathermeans)
write.csv(forecasts,paste(as.character(Sys.Date()),level,"forecasts.csv",sep=""),row.names=FALSE)
